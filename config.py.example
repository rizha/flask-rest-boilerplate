import os
from datetime import timedelta

from celery.schedules import crontab


BASE_DIR = os.path.abspath(os.path.dirname(__file__))


class Config:
    DEBUG = True
    SECRET_KEY = os.getenv('SECRET_KEY') or 'imyoursecretkey'

    TOKEN_EXPIRATION = 600

    MONGO_USERNAME = 'user'
    MONGO_PASSWORD = 'pass'
    MONGO_HOST = 'localhost'
    MONGO_DBNAME = 'database'

    CACHE_TYPE = 'redis'
    CACHE_REDIS_HOST = 'localhost'

    BUNDLE_ERRORS = True

    CELERY_BROKER_URL = 'amqp://user:pass@localhost/vhost'
    CELERY_RESULT_BACKEND = 'rpc://'
    CELERY_TASK_SERIALIZER = 'json'
    CELERY_RESULT_SERIALIZER = 'json'
    CELERY_ACCEPT_CONTENT = ['json']
    CELERY_TIMEZONE = 'Asia/Jakarta'
    CELERY_ENABLE_UTC = True

    CELERYBEAT_SCHEDULE = {
        'add_every_30_seconds': {
            'task': 'app.blog.tasks.add',
            'schedule': timedelta(seconds=30)

        },
        'add_every_30_minutes': {
            'task': 'app.blog.tasks.add',
            'schedule': crontab(minute='*/30')
        }
    }

    CELERY_ALWAYS_EAGER = True

    LOGGING_FORMAT = '%(asctime)s - local.%(levelname)s - %(funcName)s ' \
                     '- %(module)s - %(message)s'


class TestingConfig(Config):
    TESTING = True

    MONGO_USERNAME = 'user'
    MONGO_PASSWORD = 'pass'
    MONGO_HOST = 'localhost'
    MONGO_DBNAME = 'databasetest'


class LocalConfig(Config):
    DEBUG = True


class StagingConfig(Config):
    DEBUG = False

    LOGGING_FORMAT = '%(asctime)s - staging.%(levelname)s - %(funcName)s ' \
                     '- %(module)s - %(message)s'


class ProductionConfig(Config):
    DEBUG = False

    LOGGING_FORMAT = '%(asctime)s - production.%(levelname)s - %(funcName)s ' \
                     '- %(module)s - %(message)s'


config = {
    'local': LocalConfig,
    'testing': TestingConfig,
    'staging': StagingConfig,
    'production': ProductionConfig,
}
